"use strict";function selectElementsContent(a){if(a instanceof HTMLElement){if(document.body.createTextRange){var b=document.body.createTextRange();b.moveToElementText(a),b.select()}else if(window.getSelection){var c=window.getSelection(),b=document.createRange();b.selectNodeContents(a),c.removeAllRanges(),c.addRange(b)}return!0}throw new Error("You can select only HTMLElement")}function capitalizeFirstLetter(a){return a.charAt(0).toUpperCase()+a.slice(1)}function InputField(a){this.label=a,this.value=""}function FieldType(a){this.type=a,this.readableName=capitalizeFirstLetter(a),this.fields=[],this.output=""}function beautifyTypeOutput(a,b){var c="";return _.forEach(a,function(a,d){a.trim()&&(d&&(c+="\n"+b.andWrapper+b.andLiteral+b.andWrapper+" "),c+=a)}),c}function getReadableOutput(a){var b="";return _.forEach(a.fieldTypes,function(c,d){var e=a[c];d&&(b+="\n"),b+=a.typeWrapper+e.readableName+a.typeWrapper+" "+beautifyTypeOutput(e.getValues(),a)+"\n"}),b}function bddTicketsCtrl(a){function b(a){_.isArray(a.fieldTypes)&&_.forEach(a.fieldTypes,function(b){a[b]=new FieldType(b),a[b].add()})}function c(){i=!0,a.options=angular.copy(j),b(a.options),i=!1,d()}function d(){i||(a.output=getReadableOutput(a.options))}function e(){selectElementsContent(document.getElementById("commitParser_output"))}function f(b){return _.get(a.options,b)?a.options[b].add():void 0}function g(b,c){var e;return _.get(a.options,b)?(e=a.options[b].remove(c),d(),e):void 0}function h(b){var c;return _.get(a.options,b)&&(c=a.options[b].getValues()),d(),c}var i=!1,j={fieldTypes:["given","when","then"],typeWrapper:"*",andWrapper:"_",andLiteral:"And",placeholder:{given:"e.g. logged as Administrator to Reports site",when:'e.g. button "Generate report" is clicked',then:"e.g. download popup is visible"}};a.reset=c,a.select=e,a.calculateOutput=d,a.addField=f,a.removeField=g,a.updateFields=h,c(),d()}function charChain(a,b){for(var c="",d=0;b>d;d++)c+=a;return c}function fillLine(a,b,c){var d="",e=b-a.length,f=Math.round(e/2),g=e-f,h=charChain(c.fillChar,f+1*c.borderAround),i=charChain(c.fillChar,g+1*c.borderAround);return d+=h,c.additionalEmptySpacer&&(d+=" "),d+=a,c.additionalEmptySpacer&&(d+=" "),d+=i,c.escapeStringEscapeChars&&(d=d.replace(c.stringEscapeChar,"\\"+c.stringEscapeChar,"g")),d}function wrapLineInChars(a,b){var c="";if(a){var d=2*b.fillChar.length*b.borderAround+2*b.additionalEmptySpacer,e=b.lineLength-d;if(a.length<e)c=b.lineStart+b.stringEscapeChar+fillLine(a,e,b)+b.stringEscapeChar+b.lineEnd+b.endOfLineChar;else for(var f,g=0;g<a.length;)f=a.slice(g,g+e),c+=b.lineStart+b.stringEscapeChar+fillLine(f,e,b)+b.stringEscapeChar+b.lineEnd+b.endOfLineChar,g+=e}return c}function generateEmptyLine(a){var b="";return b+=a.lineStart+a.stringEscapeChar+charChain(a.fillChar,a.lineLength)+a.stringEscapeChar+a.lineEnd+a.endOfLineChar}function generateLine(a,b){var c="";return a&&(c+=wrapLineInChars(a,b)),c}function varLog(a,b){var c="";if(a&&"string"==typeof a){var d=a;b.escapeStringEscapeChars&&(d=d.replace(b.stringEscapeChar,"\\"+b.stringEscapeChar,"g")),c+=b.lineStart+b.stringEscapeChar+b.fillChar,b.additionalEmptySpacer&&(c+=" "),c+=d+b.varNamePostfix+" "+b.stringEscapeChar+b.varConcatChar+b.varEscapePrefix+a+b.varEscapePostfix+b.lineEnd+b.endOfLineChar}return c}function generateComment(a){var b="",c=a.input.split("\n");a.borderAround&&(b+=generateEmptyLine(a));for(var d=0;d<c.length;d++)b+=generateLine(c[d].trim(),a);if(a.varsToList)for(var e=a.varsToList.split(a.varsToListSeparator),d=0;d<e.length;d++)a.borderAround&&(b+=generateEmptyLine(a)),b+=varLog(e[d].trim(),a);return a.borderAround&&(b+=generateEmptyLine(a)),b}function selectElementsContent(a){if(a instanceof HTMLElement){if(document.body.createTextRange){var b=document.body.createTextRange();b.moveToElementText(a),b.select()}else if(window.getSelection){var c=window.getSelection(),b=document.createRange();b.selectNodeContents(a),c.removeAllRanges(),c.addRange(b)}return!0}throw new Error("You can select only HTMLElement")}function commentWrapperCtrl(a){function b(){f||(a.output=generateComment(a.options))}function c(){f=!0,a.options=angular.copy(g),f=!1,b()}function d(){selectElementsContent(document.getElementById("commentWrapper_output"))}function e(c){f=!0,angular.extend(a.options,c),f=!1,b()}var f=!1,g={lineStart:"console.log(",lineEnd:");",stringEscapeChar:"'",lineLength:60,fillChar:"*",showAdvancedOptions:!1,additionalEmptySpacer:!0,borderAround:!0,escapeStringEscapeChars:!0,endOfLineChar:"\n",varsToList:"",varNamePostfix:":",varsToListSeparator:",",varConcatChar:",",varEscapePrefix:"",varEscapePostfix:"",placeholder:{lineStart:"console.log(",lineEnd:");",fillChar:'e.g. "*" or "="',varConcatChar:'e.g. "," or "+"',varsToList:"lorem, ipsum, dolor",varEscapePrefix:"JSON.stringify(",varEscapePostfix:', false, "\\t")',varNamePostfix:'e.g. ":" or "="'},input:"Put your comment\nhere"},h={androidstudio:{presetName:"Android Studio",lineStart:"Log.i(TAG, ",lineEnd:");",lineLength:80,stringEscapeChar:'"',varConcatChar:"+",varEscapePrefix:"",varEscapePostfix:".toString()",input:"Android Studio preset loaded!\nLoad LOG class and add an TAG string"},browser:{lineStart:"console.log(",lineEnd:");",escapeStringEscapeChars:!0,stringEscapeChar:"'",presetName:"Browser",lineLength:60,varEscapePrefix:"",varEscapePostfix:"",varConcatChar:",",input:"Browser preset loaded!"},javascriptcomment:{presetName:"JS Comment",lineStart:"// ",lineEnd:"",stringEscapeChar:"",lineLength:60,fillChar:"*",additionalEmptySpacer:!0,borderAround:!0,escapeStringEscapeChars:!1,endOfLineChar:"\n",input:"JS Comment preset loaded!"},nodejs:{lineStart:"console.log(",lineEnd:");",escapeStringEscapeChars:!0,stringEscapeChar:"'",presetName:"NodeJS",lineLength:60,varEscapePrefix:"util.inspect(",varEscapePostfix:", false, 3)",varConcatChar:",",input:'NodeJS preset loaded!\nDon`t forget to require "util" Node package'},python3:{lineStart:"print(",lineEnd:")",escapeStringEscapeChars:!0,stringEscapeChar:"'",presetName:"Python 3.x",lineLength:60,varEscapePrefix:"str(",varEscapePostfix:")",varConcatChar:" + ",input:"Python 3.x preset loaded!"}};a.options=angular.copy(g),a.calculateOutput=b,a.presets=h,a.loadPreset=e,a.reset=c,a.select=d,b()}function selectElementsContent(a){if(a instanceof HTMLElement){if(document.body.createTextRange){var b=document.body.createTextRange();b.moveToElementText(a),b.select()}else if(window.getSelection){var c=window.getSelection(),b=document.createRange();b.selectNodeContents(a),c.removeAllRanges(),c.addRange(b)}return!0}throw new Error("You can select only HTMLElement")}function chopTextBySections(a){function b(a){a.test(g[h])&&(i=!0)}var c=a.input,d=a.sections,e="",f={},g=c.split("\n");for(var h in g)if(g.hasOwnProperty(h)){var i=!1;if(d.forEach(b),i){e=g[h].trim();continue}g[h].trim()[0]===a.listChar?("undefined"==typeof f[e]&&(f[e]=""),f[e]+="\n"+g[h].trim()):e="Others:"}return f}function beautifyOutput(a){var b="";for(var c in a)a.hasOwnProperty(c)&&(b+=c,b+=a[c],b+="\n");return b}function parseCommits(a){var b="",c=chopTextBySections(a);return b+=beautifyOutput(c,a)}function generateSections(a){var b=angular.copy(a.sectionLiterals),c=[];return b.forEach(function(b){var d="";"string"==typeof b&&""!==b.trim()&&(a.sectionCaseInsensitive&&(d+="i"),c.push(new RegExp(b.trim(),d)))}),c}function commitParserCtrl(a){function b(){f=!0,a.options=angular.copy(g),f=!1,e(),c()}function c(){f||(a.output=parseCommits(a.options))}function d(){selectElementsContent(document.getElementById("commitParser_output"))}function e(){a.options.sectionsInput.trim()&&(a.options.sectionLiterals=a.options.sectionsInput.split(a.options.sectionsSeparator)),a.options.sections=generateSections(a.options)}var f=!1,g={showAdvancedOptions:!0,input:"",listChar:"*",sectionsInput:"",sectionsSeparator:",",sectionLiterals:["added","removed","fixed","modified"],sectionCaseInsensitive:!0,sections:[/added:/i,/removed:/i,/fixed:/i,/modified:/i],placeholder:{sections:"Defaults: added, removed, fixed, modified",listChar:'e.g. "*" or "-"',input:"// example how to fill this field:\n\nAdded:\n* thing added\n* another thing added\n\nRemoved:\n* unwanted feature to remove\n\nNot matched section:\n* this will be in Others\n\nThis text will be totaly ignored"}};a.reset=b,a.select=d,a.calculateOutput=c,a.updateSections=e,b(),c()}angular.module("jsUtilsApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ui.bootstrap"]).config(["$routeProvider",function(a){a.when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).when("/",{templateUrl:"views/comment-wrapper.html",controller:"CommentWrapperCtrl",controllerAs:"commentWrapper"}).when("/contact",{templateUrl:"views/contact.html",controller:"ContactCtrl",controllerAs:"contact"}).when("/commits",{templateUrl:"views/commit-parser.html",controller:"CommitParserCtrl",controllerAs:"commitParser"}).when("/bdd",{templateUrl:"views/bdd-tickets.html",controller:"BddTicketsCtrl",controllerAs:"bddTickets"}).otherwise({redirectTo:"/"})}]),angular.module("jsUtilsApp").controller("MainCtrl",function(){}),angular.module("jsUtilsApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("jsUtilsApp").controller("BddTicketsCtrl",bddTicketsCtrl),FieldType.prototype.add=function(){var a=_.uniqueId(this.type+"_");this.fields.push(new InputField(a))},FieldType.prototype.remove=function(a){var b=_.remove(this.fields,function(b){return b.label===a});return b},FieldType.prototype.getValues=function(){return _.map(this.fields,"value")},bddTicketsCtrl.$inject=["$scope"],angular.module("jsUtilsApp").controller("CommentWrapperCtrl",["$scope",commentWrapperCtrl]),angular.module("jsUtilsApp").controller("CommitParserCtrl",commitParserCtrl),commitParserCtrl.$inject=["$scope"],angular.module("jsUtilsApp").controller("ContactCtrl",["$scope",function(a){a.gitHubLink="https://github.com/kbanach/JavaScript-Helpers"}]),angular.module("jsUtilsApp").directive("mainMenu",function(){return{templateUrl:"views/partials/main-menu.html",restrict:"E"}}),angular.module("jsUtilsApp").run(["$templateCache",function(a){a.put("views/about.html","<h2>About</h2> <p>This site will be filled with some content. I promise.</p>"),a.put("views/bdd-tickets.html",'<h2>BDD Tickets</h2> <div ng-repeat="fieldType in options.fieldTypes"> <h3>{{ options[fieldType].readableName }}...</h3> <div class="row form-group" ng-repeat="givenField in options[fieldType].fields"> <div class="col-md-11"> <input type="text" ng-model="givenField.value" ng-blur="updateFields(fieldType)" class="form-control" placeholder="{{options.placeholder[fieldType]}}" id="{{givenField.label}}"> </div> <div class="col-md-1"> <input class="btn btn-danger" type="button" value="X" ng-click="removeField(fieldType, givenField.label)"> </div> </div> <div class="row form-group col-md-12"> <input class="btn btn-primary" type="button" value="Add another &quot;{{options[fieldType].readableName}}&quot;" ng-click="addField(fieldType)"> </div> </div> <div class="form-group"> <input class="btn btn-default" type="button" value="Reset settings" ng-click="reset()"> <input class="btn btn-default" type="button" value="Select output" ng-click="select()"> </div> <div class="form-group"> <pre id="commitParser_output">{{output}}</pre> </div>'),a.put("views/comment-wrapper.html",'<h2>Comments Generator</h2> <h3>Default Presets</h3> <div class="btn-group"> <a class="btn btn-default btn-sm" ng-repeat="(key, value) in presets" ng-click="loadPreset(value)"> {{value.presetName}} preset </a> </div> <h3>Basic Settings</h3> <div class="form-group"> <label for="commentWrapper_fillChar">Char to use as filler</label> <input type="text" ng-model="options.fillChar" ng-change="calculateOutput()" ng-maxlength="1" class="form-control" placeholder="{{options.placeholder.fillChar}}" id="commentWrapper_fillChar"> </div> <div class="form-group"> <label for="commentWrapper_lineLength">Line length</label> <input type="number" ng-model="options.lineLength" ng-blur="calculateOutput()" class="form-control" id="commentWrapper_lineLength"> </div> <h3> Advanced Settings <div class="btn-group pull-right"> <a class="btn btn-sm pull-right" ng-class="{true: \'btn-primary\', false: \'btn-danger\'}[!options.showAdvancedOptions]" ng-click="options.showAdvancedOptions = !options.showAdvancedOptions"> {{!options.showAdvancedOptions && \'Show\' || \'Hide\'}} advanced options </a> </div> </h3> <div ng-show="options.showAdvancedOptions"> <div class="form-group"> <label for="commentWrapper_lineStart">Line start</label> <input type="text" ng-model="options.lineStart" ng-trim="false" ng-change="calculateOutput()" class="form-control" placeholder="{{options.placeholder.lineStart}}" id="commentWrapper_lineStart"> </div> <div class="form-group"> <label for="commentWrapper_lineEnd">Line end</label> <input type="text" ng-model="options.lineEnd" ng-trim="false" ng-change="calculateOutput()" class="form-control" placeholder="{{options.placeholder.lineEnd}}" id="commentWrapper_lineEnd"> </div> <div class="form-group"> <label for="commentWrapper_stringEscapeChar"> Char escaper</label> <input type="text" ng-model="options.stringEscapeChar" ng-change="calculateOutput()" ng-maxlength="1" class="form-control" id="commentWrapper_stringEscapeChar"> </div> <div class="form-group"> <label class="checkbox-inline"> <input type="checkbox" ng-model="options.additionalEmptySpacer" ng-change="calculateOutput()" id="commentWrapper_additionalEmptySpacer">Put additional empty space between fill and content </label> </div> <div class="form-group"> <label class="checkbox-inline"> <input type="checkbox" ng-model="options.borderAround" ng-change="calculateOutput()" id="commentWrapper_borderAround">Put "border" around comments </label> </div> <div class="form-group"> <label class="checkbox-inline"> <input type="checkbox" ng-model="options.escapeStringEscapeChars" ng-change="calculateOutput()" id="commentWrapper_escapeStringEscapeChars">Escape string starting/ending char </label> </div> <div class="form-group"> <label for="commentWrapper_varsToListSeparator">Variable separator</label> <input type="text" ng-model="options.varsToListSeparator" ng-change="calculateOutput()" ng-maxlength="1" class="form-control" id="commentWrapper_varsToListSeparator"> </div> <div class="form-group"> <label for="commentWrapper_varConcatChar">Variable concatenate char</label> <input type="text" ng-model="options.varConcatChar" ng-change="calculateOutput()" ng-maxlength="1" class="form-control" placeholder="{{options.placeholder.varConcatChar}}" id="commentWrapper_varConcatChar"> </div> <div class="form-group"> <label for="commentWrapper_varEscapePrefix">Variable wrapper code prefix</label> <input type="text" ng-model="options.varEscapePrefix" ng-change="calculateOutput()" class="form-control" placeholder="{{options.placeholder.varEscapePrefix}}" id="commentWrapper_varEscapePrefix"> </div> <div class="form-group"> <label for="commentWrapper_varNamePostfix">Variable name postfix</label> <input type="text" ng-model="options.varNamePostfix" ng-change="calculateOutput()" class="form-control" placeholder="{{options.placeholder.varNamePostfix}}" id="commentWrapper_varNamePostfix"> </div> <div class="form-group"> <label for="commentWrapper_varEscapePostfix">Variable wrapper code postfix</label> <input type="text" ng-model="options.varEscapePostfix" ng-change="calculateOutput()" class="form-control" placeholder="{{options.placeholder.varEscapePostfix}}" id="commentWrapper_varEscapePostfix"> </div> </div> <!-- advanced options --> <h3>Make comment</h3> <div class="form-group"> <label for="commentWrapper_varsToList">Variable names to list (use <code>{{options.varsToListSeparator}}</code> as separator) </label> <input type="text" ng-model="options.varsToList" ng-change="calculateOutput()" class="form-control" placeholder="{{options.placeholder.varsToList}}" id="commentWrapper_varsToList"> </div> <div class="form-group"> <label for="commentWrapper_input">Input</label> <textarea ng-model="options.input" ng-change="calculateOutput()" id="commentWrapper_input" class="form-control" rows="10">\n    </textarea> </div> <div class="form-group"> <input class="btn btn-default" type="button" value="Reset settings" ng-click="reset()"> <input class="btn btn-default" type="button" value="Select output" ng-click="select()"> </div> <div class="form-group"> <pre id="commentWrapper_output">{{output}}</pre> </div>'),a.put("views/commit-parser.html",'<h2>Commit Parser</h2> <h3>Basic Settings</h3> <div class="form-group"> <label for="commitParser_sections">Sections (use <code>{{options.sectionsSeparator}}</code> as separator) </label> <input type="text" ng-model="options.sectionsInput" ng-change="updateSections()" class="form-control" placeholder="{{options.placeholder.sections}}" id="commitParser_sections"> </div> <div class="form-group"> <label for="commitParser_listChar">Char to begin each feature</label> <input type="text" ng-model="options.listChar" ng-change="calculateOutput()" ng-maxlength="1" class="form-control" placeholder="{{options.placeholder.listChar}}" id="commitParser_listChar"> </div> <div class="form-group"> <label class="checkbox-inline"> <input type="checkbox" ng-model="options.sectionCaseInsensitive" ng-change="updateSections()" id="commitParser_sectionCaseInsensitive">Case-insensitive section names </label> </div> <div class="form-group"> <label for="commitParser_input">Commit squash messages</label> <textarea ng-model="options.input" ng-change="calculateOutput()" uib-tooltip-template="\'commitParser_inputTooltip.html\'" tooltip-placement="top" id="commitParser_input" class="form-control" rows="10">\n    </textarea> </div> <div class="form-group"> <input class="btn btn-default" type="button" value="Reset settings" ng-click="reset()"> <input class="btn btn-default" type="button" value="Select output" ng-click="select()"> </div> <div class="form-group"> <pre id="commitParser_output">{{output}}</pre> </div> <script type="text/ng-template" id="commitParser_inputTooltip.html"><div id="commitParser_inputPlaceholder" class="text-left">{{options.placeholder.input}}</div></script>'),a.put("views/contact.html",'<h2>Contact</h2> <p>...but not form. If you want to know anything more about this page, please go to <a ng-href="{{gitHubLink}}">GitHub project</a> site.</p> <p>Feel free to copy/break/blastoff site code as you want.</p>'),a.put("views/main.html",'<div class="jumbotron"> <h1>\'Allo, \'Allo!</h1> <p class="lead"> <img src="images/yeoman.png" alt="I\'m Yeoman"><br> Always a pleasure scaffolding your apps. </p> <p><a class="btn btn-lg btn-success" ng-href="#/">Splendid!<span class="glyphicon glyphicon-ok"></span></a></p> </div> <div class="row marketing"> <h4>HTML5 Boilerplate</h4> <p> HTML5 Boilerplate is a professional front-end template for building fast, robust, and adaptable web apps or sites. </p> <h4>Angular</h4> <p> AngularJS is a toolset for building the framework most suited to your application development. </p> <h4>Karma</h4> <p>Spectacular Test Runner for JavaScript.</p> </div>'),a.put("views/partials/main-menu.html",'<div class="navbar navbar-default" role="navigation"> <div class="container"> <div class="navbar-header"> <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#js-navbar-collapse"> <span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> <a class="navbar-brand" href="#/">JS Utils</a> </div> <div class="collapse navbar-collapse" id="js-navbar-collapse"> <ul class="nav navbar-nav"> <li><a ng-href="#/">Comments Generator</a></li> <li><a ng-href="#/commits">Commit Parser</a></li> <li><a ng-href="#/bdd">BDD helper</a></li> <li><a ng-href="#/contact">Contact</a></li> </ul> </div> </div> </div>')}]);